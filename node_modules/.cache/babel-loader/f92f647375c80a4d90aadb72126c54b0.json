{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nineleaps/Desktop/goal/src/modules/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from \"../assets/Icon.svg\";\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport YearMonthPicker from './DatePicker';\nimport Box from '@material-ui/core/Box';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 560,\n    margin: 'auto',\n    textAlign: 'initial'\n  },\n  avatar: {\n    width: '64px',\n    height: '64px'\n  },\n  margin: {\n    margin: theme.spacing(2),\n    width: '250px'\n  },\n  planColor: {\n    background: '#F4F8FA'\n  }\n}));\nexport default function GoalCard() {\n  _s();\n\n  const classes = useStyles();\n  const [amount, setAmount] = React.useState('');\n  const [date, setDate] = React.useState('');\n  const [savings, setSavings] = React.useState('');\n  const [months, setMonths] = React.useState('');\n  const [month, setShowMonth] = React.useState('');\n\n  const handleChangeAmount = e => {\n    setAmount(e.target.value);\n    const d1 = new Date();\n\n    if (date !== '') {\n      let diff = (date.getFullYear() - d1.getFullYear()) * 12;\n      diff -= d1.getMonth();\n      diff += date.getMonth();\n\n      if (e.target.value !== '' && diff > 0) {\n        const saveAmount = Math.ceil(Number(e.target.value) / diff);\n        setMonths(diff);\n        setSavings(saveAmount);\n      }\n    }\n  };\n\n  const dateChange = date => {\n    setDate(date);\n    const d1 = new Date();\n    let diff = (date.getFullYear() - d1.getFullYear()) * 12;\n    diff -= d1.getMonth();\n    diff += date.getMonth();\n\n    if (amount !== '' && diff > 0) {\n      const saveAmount = Math.ceil(Number(amount) / diff);\n      setMonths(diff);\n      setShowMonth();\n      setSavings(saveAmount);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        \"aria-label\": \"recipe\",\n        className: classes.avatar,\n        src: Icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this),\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: \"Buy a house\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this),\n      subheader: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        variant: \"h5\",\n        children: \"Saving goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      className: classes.margin,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"standard-adornment-amount\",\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"standard-adornment-amount\",\n        value: amount,\n        onChange: handleChangeAmount,\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YearMonthPicker, {\n      dateChange: dateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px black solid',\n        margin: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"span\",\n        display: \"block\",\n        p: 1,\n        bgcolor: \"background.paper\",\n        children: [\"Monthly Amount: $ \", savings]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"span\",\n        display: \"block\",\n        p: 1,\n        className: classes.planColor,\n        children: [\"You\\u2019re planning \", months, \" monthly deposits to reach your $\", amount, \" goal by .\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GoalCard, \"xbziq+f4uUEiEROi1W94rpPdZ8g=\", false, function () {\n  return [useStyles];\n});\n\n_c = GoalCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalCard\");","map":{"version":3,"sources":["/home/nineleaps/Desktop/goal/src/modules/Card.js"],"names":["React","makeStyles","Card","CardHeader","Avatar","Typography","FormControl","InputLabel","Input","InputAdornment","YearMonthPicker","Box","useStyles","theme","root","width","margin","textAlign","avatar","height","spacing","planColor","background","GoalCard","classes","amount","setAmount","useState","date","setDate","savings","setSavings","months","setMonths","month","setShowMonth","handleChangeAmount","e","target","value","d1","Date","diff","getFullYear","getMonth","saveAmount","Math","ceil","Number","dateChange","Icon","border"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '../assets/Icon.svg';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport YearMonthPicker from './DatePicker';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 560,\n        margin: 'auto',\n        textAlign: 'initial',\n    },\n    avatar: {\n        width: '64px',\n        height: '64px',\n    },\n    margin: {\n        margin: theme.spacing(2),\n        width: '250px',\n    },\n    planColor: {\n        background: '#F4F8FA',\n    }\n}));\n\nexport default function GoalCard() {\n    const classes = useStyles();\n    const [amount, setAmount] = React.useState('');\n    const [date, setDate] = React.useState('');\n    const [savings, setSavings] = React.useState('');\n    const [months, setMonths] = React.useState('');\n    const [month, setShowMonth] = React.useState('');\n    const handleChangeAmount = (e) => {\n        setAmount(e.target.value);\n        const d1 = new Date();\n        if (date !== '') {\n            let diff = (date.getFullYear() - d1.getFullYear()) * 12;\n            diff -= d1.getMonth();\n            diff += date.getMonth();\n            if (e.target.value !== '' && diff > 0) {\n                const saveAmount = Math.ceil(Number(e.target.value) / diff);\n                setMonths(diff);\n                setSavings(saveAmount);\n            }\n        }\n    }\n    const dateChange = (date) => {\n        setDate(date);\n        const d1 = new Date();\n        let diff = (date.getFullYear() - d1.getFullYear()) * 12;\n        diff -= d1.getMonth();\n        diff += date.getMonth();\n        if (amount !== '' && diff > 0) {\n            const saveAmount = Math.ceil(Number(amount) / diff);\n            setMonths(diff);\n            setShowMonth()\n            setSavings(saveAmount);\n        }\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                avatar={\n                    <Avatar aria-label=\"recipe\" className={classes.avatar} src={Icon} />\n                }\n                title={\n                    <Typography variant=\"h5\" component=\"h2\">\n                        Buy a house\n                    </Typography>\n                }\n                subheader={\n                    <Typography color=\"textSecondary\" variant=\"h5\" >\n                        Saving goal\n                    </Typography>\n                }\n            />\n            <FormControl fullWidth className={classes.margin}>\n                <InputLabel htmlFor=\"standard-adornment-amount\">Total Amount</InputLabel>\n                <Input\n                    id=\"standard-adornment-amount\"\n                    value={amount}\n                    onChange={handleChangeAmount}\n                    startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                />\n            </FormControl>\n            <YearMonthPicker dateChange={dateChange} />\n            <div style={{ border: '1px black solid', margin: '24px' }}>\n                <Box component=\"span\" display=\"block\" p={1} bgcolor=\"background.paper\">\n                    Monthly Amount: $ {savings}\n                </Box>\n                <Box component=\"span\" display=\"block\" p={1} className={classes.planColor}>\n                    You’re planning {months} monthly deposits to reach your ${amount} goal by .\n      </Box>\n            </div>\n        </Card>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}